# Deploy API reference docs to GitHub Pages

trigger:
- master

# Only deploy from master
pr: none

pool:
  vmImage: 'windows-2019'

variables:
  dotnetVersion: '3.1.101'
  siteBranch: 'gh-pages'
  currentSiteDirectory: 'gh-pages'
  newSiteDirectory: 'docfx/_site'

steps:
- task: DownloadSecureFile@1
  inputs:
    secureFile: deploy_key
  displayName: Get deploy key

- bash: |
    mkdir -p ~/.ssh
    mv $DOWNLOADSECUREFILE_SECUREFILEPATH ~/.ssh/id_rsa
    chmod 700 ~/.ssh
    chmod 600 ~/.ssh/id_rsa
    ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
  displayName: Set up Git SSH authentication

- task: DotNetCoreInstaller@0
  displayName: Install dotnet
  inputs:
    version: $(dotnetVersion)

- script: |
    choco install docfx -y
  displayName: Install docfx

- script: |
    dotnet restore
  displayName: dotnet restore

- script: |
    docfx docfx/docfx.json
  displayName: Build documentation

# The following logic is similar to the docfx-seed example: https://github.com/docascode/docfx-seed/blob/eea1fd7dc62e043cc59a28ab0ed11937161d38ab/appveyor.yml

- bash: |
    git clone https://github.com/Texart/Texart.git -b $(siteBranch) $(currentSiteDirectory) -q
    cp -R $(currentSiteDirectory)/.git $(newSiteDirectory)
  displayName: 'Fetch GitHub Pages branch'

- bash: |
    git config --local user.name "Azure Pipelines"
    git config --local user.email "azuredevops@microsoft.com"
    git config --local core.autocrlf false
    git add .
    git commit --allow-empty -m "Publishing GitHub Pages [skip ci]"
  displayName: Commit built documentation
  workingDirectory: $(newSiteDirectory)

- bash: |
    git remote set-url --push origin git@github.com:Texart/Texart.git
    git push origin HEAD:$(siteBranch)
  displayName: Publish to GitHub Pages
  workingDirectory: $(newSiteDirectory)
  condition: |
    and(not(eq(variables['Build.Reason'], 'PullRequest')),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'))
